/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module shifter_25 (
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] s
  );
  
  
  
  reg [15:0] x;
  
  reg [15:0] y;
  
  reg [15:0] z;
  
  reg [15:0] a_inv;
  
  reg [15:0] a_inv2;
  
  reg msb;
  
  integer i;
  
  always @* begin
    
    case (alufn[0+0-:1])
      1'h0: begin
        a_inv = a;
      end
      1'h1: begin
        for (i = 1'h0; i < 5'h10; i = i + 1) begin
          a_inv[(4'hf - i)*1+0-:1] = a[(i)*1+0-:1];
        end
      end
      default: begin
        a_inv = a;
      end
    endcase
    
    case (alufn[1+0-:1])
      1'h0: begin
        msb = 1'h0;
      end
      1'h1: begin
        msb = a[15+0-:1];
      end
      default: begin
        msb = 1'h0;
      end
    endcase
    
    case (b[3+0-:1])
      1'h0: begin
        x = a_inv;
      end
      1'h1: begin
        x[8+7-:8] = a_inv[0+7-:8];
        x[0+7-:8] = {4'h8{msb}};
      end
      default: begin
        x = a_inv;
      end
    endcase
    
    case (b[2+0-:1])
      1'h0: begin
        y = x;
      end
      1'h1: begin
        y[4+11-:12] = x[0+11-:12];
        y[0+3-:4] = {3'h4{msb}};
      end
      default: begin
        y = x;
      end
    endcase
    
    case (b[1+0-:1])
      1'h0: begin
        z = y;
      end
      1'h1: begin
        z[2+13-:14] = y[0+13-:14];
        z[0+1-:2] = {2'h2{msb}};
      end
      default: begin
        z = y;
      end
    endcase
    
    case (b[0+0-:1])
      1'h0: begin
        a_inv2 = z;
      end
      1'h1: begin
        a_inv2[1+14-:15] = z[0+14-:15];
        a_inv2[0+0-:1] = msb;
      end
      default: begin
        a_inv2 = z;
      end
    endcase
    
    case (alufn[0+0-:1])
      1'h0: begin
        s = a_inv2;
      end
      1'h1: begin
        for (i = 1'h0; i < 5'h10; i = i + 1) begin
          s[(4'hf - i)*1+0-:1] = a_inv2[(i)*1+0-:1];
        end
      end
      default: begin
        s = a_inv2;
      end
    endcase
  end
endmodule
